
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.croma.mod.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

import net.croma.mod.block.YellowInvertedTileBlock;
import net.croma.mod.block.YellowInvertedSlabBlock;
import net.croma.mod.block.YellowInvertedBrickSlabBlock;
import net.croma.mod.block.YellowCutInvertedTileBlock;
import net.croma.mod.block.YellowCutInvertedSlabBlock;
import net.croma.mod.block.YellowCutChromaTileBlock;
import net.croma.mod.block.YellowCutChromaSlabBlock;
import net.croma.mod.block.YellowChromaTileBlock;
import net.croma.mod.block.YellowChromaSlabBlock;
import net.croma.mod.block.YellowChromaBrickSlabBlock;
import net.croma.mod.block.SmallChromaBrickBlock;
import net.croma.mod.block.RedInvertedTileBlock;
import net.croma.mod.block.RedInvertedSlabBlock;
import net.croma.mod.block.RedInvertedBrickSlabBlock;
import net.croma.mod.block.RedCutInvertedTileBlock;
import net.croma.mod.block.RedCutInvertedSlabBlock;
import net.croma.mod.block.RedCutChromaTileBlock;
import net.croma.mod.block.RedCutChromaSlabBlock;
import net.croma.mod.block.RedChromaTileBlock;
import net.croma.mod.block.RedChromaSlabBlock;
import net.croma.mod.block.RedChromaBrickSlabBlock;
import net.croma.mod.block.PurpleInvertedTileBlock;
import net.croma.mod.block.PurpleInvertedSlabBlock;
import net.croma.mod.block.PurpleInvertedBrickSlabBlock;
import net.croma.mod.block.PurpleCutInvertedTileBlock;
import net.croma.mod.block.PurpleCutInvertedSlabBlock;
import net.croma.mod.block.PurpleCutChromaTileBlock;
import net.croma.mod.block.PurpleCutChromaSlabBlock;
import net.croma.mod.block.PurpleChromaTileBlock;
import net.croma.mod.block.PurpleChromaSlabBlock;
import net.croma.mod.block.PurpleChromaBrickSlabBlock;
import net.croma.mod.block.PinkInvertedTileBlock;
import net.croma.mod.block.PinkInvertedSlabBlock;
import net.croma.mod.block.PinkInvertedBrickSlabBlock;
import net.croma.mod.block.PinkCutInvertedTileBlock;
import net.croma.mod.block.PinkCutInvertedSlabBlock;
import net.croma.mod.block.PinkCutChromaTileBlock;
import net.croma.mod.block.PinkCutChromaSlabBlock;
import net.croma.mod.block.PinkChromaTileBlock;
import net.croma.mod.block.PinkChromaSlabBlock;
import net.croma.mod.block.PinkChromaBrickSlabBlock;
import net.croma.mod.block.OrangeInvertedTileBlock;
import net.croma.mod.block.OrangeInvertedSlabBlock;
import net.croma.mod.block.OrangeInvertedBrickSlabBlock;
import net.croma.mod.block.OrangeCutInvertedTileBlock;
import net.croma.mod.block.OrangeCutInvertedSlabBlock;
import net.croma.mod.block.OrangeCutChromaTileBlock;
import net.croma.mod.block.OrangeCutChromaSlabBlock;
import net.croma.mod.block.OrangeChromaTileBlock;
import net.croma.mod.block.OrangeChromaSlabBlock;
import net.croma.mod.block.OrangeChromaBrickSlabBlock;
import net.croma.mod.block.MagenteCutInvertedTileBlock;
import net.croma.mod.block.MagentaInvertedTileBlock;
import net.croma.mod.block.MagentaInvertedSlabBlock;
import net.croma.mod.block.MagentaInvertedBrickSlabBlock;
import net.croma.mod.block.MagentaCutInvertedSlabBlock;
import net.croma.mod.block.MagentaCutChromaTileBlock;
import net.croma.mod.block.MagentaCutChromaSlabBlock;
import net.croma.mod.block.MagentaChromaTileBlock;
import net.croma.mod.block.MagentaChromaSlabBlock;
import net.croma.mod.block.MagentaChromaBrickSlabBlock;
import net.croma.mod.block.InvertedTileBlock;
import net.croma.mod.block.InvertedSlabBlock;
import net.croma.mod.block.InvertedBrickSlabBlock;
import net.croma.mod.block.GreenInvertedTileBlock;
import net.croma.mod.block.GreenInvertedSlabBlock;
import net.croma.mod.block.GreenInvertedBrickSlabBlock;
import net.croma.mod.block.GreenCutInvertedTileBlock;
import net.croma.mod.block.GreenCutInvertedSlabBlock;
import net.croma.mod.block.GreenCutChromaTileBlock;
import net.croma.mod.block.GreenCutChromaSlabBlock;
import net.croma.mod.block.GreenChromaTileBlock;
import net.croma.mod.block.GreenChromaSlabBlock;
import net.croma.mod.block.GreenChromaBrickSlabBlock;
import net.croma.mod.block.GrayInvertedTileBlock;
import net.croma.mod.block.GrayInvertedSlabBlock;
import net.croma.mod.block.GrayInvertedBrickSlabBlock;
import net.croma.mod.block.GrayCutInvertedTileBlock;
import net.croma.mod.block.GrayCutInvertedSlabBlock;
import net.croma.mod.block.GrayCutChromaTileBlock;
import net.croma.mod.block.GrayCutChromaSlabBlock;
import net.croma.mod.block.GrayChromaTileBlock;
import net.croma.mod.block.GrayChromaSlabBlock;
import net.croma.mod.block.GrayChromaBrickSlabBlock;
import net.croma.mod.block.CyanInvertedTileBlock;
import net.croma.mod.block.CyanInvertedSlabBlock;
import net.croma.mod.block.CyanInvertedBrickSlabBlock;
import net.croma.mod.block.CyanCutInvertedTileBlock;
import net.croma.mod.block.CyanCutInvertedSlabBlock;
import net.croma.mod.block.CyanCutChromaTileBlock;
import net.croma.mod.block.CyanCutChromaSlabBlock;
import net.croma.mod.block.CyanChromaTileBlock;
import net.croma.mod.block.CyanChromaSlabBlock;
import net.croma.mod.block.CyanChromaBrickSlabBlock;
import net.croma.mod.block.CutInvertedTileBlock;
import net.croma.mod.block.CutInvertedSlabBlock;
import net.croma.mod.block.CutChromaTileBlock;
import net.croma.mod.block.CutChromaSlabBlock;
import net.croma.mod.block.ChromaTileBlock;
import net.croma.mod.block.ChromaSlabBlock;
import net.croma.mod.block.ChromaBrickSlabBlock;
import net.croma.mod.block.BrownInvertedTileBlock;
import net.croma.mod.block.BrownInvertedSlabBlock;
import net.croma.mod.block.BrownInvertedBrickSlabBlock;
import net.croma.mod.block.BrownCutInvertedTileBlock;
import net.croma.mod.block.BrownCutInvertedSlabBlock;
import net.croma.mod.block.BrownCutChromaTileBlock;
import net.croma.mod.block.BrownCutChromaSlabBlock;
import net.croma.mod.block.BrownChromaTileBlock;
import net.croma.mod.block.BrownChromaSlabBlock;
import net.croma.mod.block.BrownChromaBrickSlabBlock;
import net.croma.mod.block.BlueSmallChromaBricksBlock;
import net.croma.mod.block.BlueInvertedTileBlock;
import net.croma.mod.block.BlueInvertedSlabBlock;
import net.croma.mod.block.BlueInvertedBrickSlabBlock;
import net.croma.mod.block.BlueCutInvertedTileBlock;
import net.croma.mod.block.BlueCutInvertedSlabBlock;
import net.croma.mod.block.BlueCutChromaTileBlock;
import net.croma.mod.block.BlueCutChromaSlabBlock;
import net.croma.mod.block.BlueChromaTileBlock;
import net.croma.mod.block.BlueChromaSlabBlock;
import net.croma.mod.block.BlueChromaBrickSlabBlock;
import net.croma.mod.CromamodMod;

public class CromamodModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, CromamodMod.MODID);
	public static final RegistryObject<Block> BLUE_CHROMA_TILE = REGISTRY.register("blue_chroma_tile", () -> new BlueChromaTileBlock());
	public static final RegistryObject<Block> CHROMA_TILE = REGISTRY.register("chroma_tile", () -> new ChromaTileBlock());
	public static final RegistryObject<Block> BROWN_CHROMA_TILE = REGISTRY.register("brown_chroma_tile", () -> new BrownChromaTileBlock());
	public static final RegistryObject<Block> CYAN_CHROMA_TILE = REGISTRY.register("cyan_chroma_tile", () -> new CyanChromaTileBlock());
	public static final RegistryObject<Block> GRAY_CHROMA_TILE = REGISTRY.register("gray_chroma_tile", () -> new GrayChromaTileBlock());
	public static final RegistryObject<Block> GREEN_CHROMA_TILE = REGISTRY.register("green_chroma_tile", () -> new GreenChromaTileBlock());
	public static final RegistryObject<Block> MAGENTA_CHROMA_TILE = REGISTRY.register("magenta_chroma_tile", () -> new MagentaChromaTileBlock());
	public static final RegistryObject<Block> ORANGE_CHROMA_TILE = REGISTRY.register("orange_chroma_tile", () -> new OrangeChromaTileBlock());
	public static final RegistryObject<Block> PINK_CHROMA_TILE = REGISTRY.register("pink_chroma_tile", () -> new PinkChromaTileBlock());
	public static final RegistryObject<Block> PURPLE_CHROMA_TILE = REGISTRY.register("purple_chroma_tile", () -> new PurpleChromaTileBlock());
	public static final RegistryObject<Block> RED_CHROMA_TILE = REGISTRY.register("red_chroma_tile", () -> new RedChromaTileBlock());
	public static final RegistryObject<Block> YELLOW_CHROMA_TILE = REGISTRY.register("yellow_chroma_tile", () -> new YellowChromaTileBlock());
	public static final RegistryObject<Block> INVERTED_TILE = REGISTRY.register("inverted_tile", () -> new InvertedTileBlock());
	public static final RegistryObject<Block> BLUE_INVERTED_TILE = REGISTRY.register("blue_inverted_tile", () -> new BlueInvertedTileBlock());
	public static final RegistryObject<Block> BROWN_INVERTED_TILE = REGISTRY.register("brown_inverted_tile", () -> new BrownInvertedTileBlock());
	public static final RegistryObject<Block> CYAN_INVERTED_TILE = REGISTRY.register("cyan_inverted_tile", () -> new CyanInvertedTileBlock());
	public static final RegistryObject<Block> GRAY_INVERTED_TILE = REGISTRY.register("gray_inverted_tile", () -> new GrayInvertedTileBlock());
	public static final RegistryObject<Block> GREEN_INVERTED_TILE = REGISTRY.register("green_inverted_tile", () -> new GreenInvertedTileBlock());
	public static final RegistryObject<Block> MAGENTA_INVERTED_TILE = REGISTRY.register("magenta_inverted_tile", () -> new MagentaInvertedTileBlock());
	public static final RegistryObject<Block> ORANGE_INVERTED_TILE = REGISTRY.register("orange_inverted_tile", () -> new OrangeInvertedTileBlock());
	public static final RegistryObject<Block> PINK_INVERTED_TILE = REGISTRY.register("pink_inverted_tile", () -> new PinkInvertedTileBlock());
	public static final RegistryObject<Block> PURPLE_INVERTED_TILE = REGISTRY.register("purple_inverted_tile", () -> new PurpleInvertedTileBlock());
	public static final RegistryObject<Block> RED_INVERTED_TILE = REGISTRY.register("red_inverted_tile", () -> new RedInvertedTileBlock());
	public static final RegistryObject<Block> YELLOW_INVERTED_TILE = REGISTRY.register("yellow_inverted_tile", () -> new YellowInvertedTileBlock());
	public static final RegistryObject<Block> CUT_CHROMA_TILE = REGISTRY.register("cut_chroma_tile", () -> new CutChromaTileBlock());
	public static final RegistryObject<Block> BLUE_CUT_CHROMA_TILE = REGISTRY.register("blue_cut_chroma_tile", () -> new BlueCutChromaTileBlock());
	public static final RegistryObject<Block> BROWN_CUT_CHROMA_TILE = REGISTRY.register("brown_cut_chroma_tile", () -> new BrownCutChromaTileBlock());
	public static final RegistryObject<Block> CYAN_CUT_CHROMA_TILE = REGISTRY.register("cyan_cut_chroma_tile", () -> new CyanCutChromaTileBlock());
	public static final RegistryObject<Block> GRAY_CUT_CHROMA_TILE = REGISTRY.register("gray_cut_chroma_tile", () -> new GrayCutChromaTileBlock());
	public static final RegistryObject<Block> GREEN_CUT_CHROMA_TILE = REGISTRY.register("green_cut_chroma_tile", () -> new GreenCutChromaTileBlock());
	public static final RegistryObject<Block> MAGENTA_CUT_CHROMA_TILE = REGISTRY.register("magenta_cut_chroma_tile", () -> new MagentaCutChromaTileBlock());
	public static final RegistryObject<Block> ORANGE_CUT_CHROMA_TILE = REGISTRY.register("orange_cut_chroma_tile", () -> new OrangeCutChromaTileBlock());
	public static final RegistryObject<Block> PINK_CUT_CHROMA_TILE = REGISTRY.register("pink_cut_chroma_tile", () -> new PinkCutChromaTileBlock());
	public static final RegistryObject<Block> PURPLE_CUT_CHROMA_TILE = REGISTRY.register("purple_cut_chroma_tile", () -> new PurpleCutChromaTileBlock());
	public static final RegistryObject<Block> RED_CUT_CHROMA_TILE = REGISTRY.register("red_cut_chroma_tile", () -> new RedCutChromaTileBlock());
	public static final RegistryObject<Block> YELLOW_CUT_CHROMA_TILE = REGISTRY.register("yellow_cut_chroma_tile", () -> new YellowCutChromaTileBlock());
	public static final RegistryObject<Block> CUT_INVERTED_TILE = REGISTRY.register("cut_inverted_tile", () -> new CutInvertedTileBlock());
	public static final RegistryObject<Block> BLUE_CUT_INVERTED_TILE = REGISTRY.register("blue_cut_inverted_tile", () -> new BlueCutInvertedTileBlock());
	public static final RegistryObject<Block> BROWN_CUT_INVERTED_TILE = REGISTRY.register("brown_cut_inverted_tile", () -> new BrownCutInvertedTileBlock());
	public static final RegistryObject<Block> CYAN_CUT_INVERTED_TILE = REGISTRY.register("cyan_cut_inverted_tile", () -> new CyanCutInvertedTileBlock());
	public static final RegistryObject<Block> GRAY_CUT_INVERTED_TILE = REGISTRY.register("gray_cut_inverted_tile", () -> new GrayCutInvertedTileBlock());
	public static final RegistryObject<Block> GREEN_CUT_INVERTED_TILE = REGISTRY.register("green_cut_inverted_tile", () -> new GreenCutInvertedTileBlock());
	public static final RegistryObject<Block> MAGENTE_CUT_INVERTED_TILE = REGISTRY.register("magente_cut_inverted_tile", () -> new MagenteCutInvertedTileBlock());
	public static final RegistryObject<Block> ORANGE_CUT_INVERTED_TILE = REGISTRY.register("orange_cut_inverted_tile", () -> new OrangeCutInvertedTileBlock());
	public static final RegistryObject<Block> PINK_CUT_INVERTED_TILE = REGISTRY.register("pink_cut_inverted_tile", () -> new PinkCutInvertedTileBlock());
	public static final RegistryObject<Block> PURPLE_CUT_INVERTED_TILE = REGISTRY.register("purple_cut_inverted_tile", () -> new PurpleCutInvertedTileBlock());
	public static final RegistryObject<Block> RED_CUT_INVERTED_TILE = REGISTRY.register("red_cut_inverted_tile", () -> new RedCutInvertedTileBlock());
	public static final RegistryObject<Block> YELLOW_CUT_INVERTED_TILE = REGISTRY.register("yellow_cut_inverted_tile", () -> new YellowCutInvertedTileBlock());
	public static final RegistryObject<Block> CHROMA_BRICKS = REGISTRY.register("chroma_bricks", () -> new ChromaBrickBlock());
	public static final RegistryObject<Block> BLUE_CHROMA_BRICKS = REGISTRY.register("blue_chroma_bricks", () -> new BlueChromaBrickBlock());
	public static final RegistryObject<Block> BROWN_CHROMA_BRICKS = REGISTRY.register("brown_chroma_bricks", () -> new BrownChromaBrickBlock());
	public static final RegistryObject<Block> CYAN_CHROMA_BRICKS = REGISTRY.register("cyan_chroma_bricks", () -> new CyanChromaBrickBlock());
	public static final RegistryObject<Block> GRAY_CHROMA_BRICKS = REGISTRY.register("gray_chroma_bricks", () -> new GrayChromaBrickBlock());
	public static final RegistryObject<Block> GREEN_CHROMA_BRICKS = REGISTRY.register("green_chroma_bricks", () -> new GreenChromaBrickBlock());
	public static final RegistryObject<Block> MAGENTA_CHROMA_BRICKS = REGISTRY.register("magenta_chroma_bricks", () -> new MagentaChromaBrickBlock());
	public static final RegistryObject<Block> ORANGE_CHROMA_BRICKS = REGISTRY.register("orange_chroma_bricks", () -> new OrangeChromaBrickBlock());
	public static final RegistryObject<Block> PINK_CHROMA_BRICKS = REGISTRY.register("pink_chroma_bricks", () -> new PinkChromaBrickBlock());
	public static final RegistryObject<Block> PURPLE_CHROMA_BRICKS = REGISTRY.register("purple_chroma_bricks", () -> new PurpleChromaBrickBlock());
	public static final RegistryObject<Block> RED_CHROMA_BRICKS = REGISTRY.register("red_chroma_bricks", () -> new RedChromaBrickBlock());
	public static final RegistryObject<Block> YELLOW_CHROMA_BRICKS = REGISTRY.register("yellow_chroma_bricks", () -> new YellowChromaBrickBlock());
	public static final RegistryObject<Block> CHROMA_SLAB = REGISTRY.register("chroma_slab", () -> new ChromaSlabBlock());
	public static final RegistryObject<Block> BLUE_CHROMA_SLAB = REGISTRY.register("blue_chroma_slab", () -> new BlueChromaSlabBlock());
	public static final RegistryObject<Block> BROWN_CHROMA_SLAB = REGISTRY.register("brown_chroma_slab", () -> new BrownChromaSlabBlock());
	public static final RegistryObject<Block> CYAN_CHROMA_SLAB = REGISTRY.register("cyan_chroma_slab", () -> new CyanChromaSlabBlock());
	public static final RegistryObject<Block> GRAY_CHROMA_SLAB = REGISTRY.register("gray_chroma_slab", () -> new GrayChromaSlabBlock());
	public static final RegistryObject<Block> GREEN_CHROMA_SLAB = REGISTRY.register("green_chroma_slab", () -> new GreenChromaSlabBlock());
	public static final RegistryObject<Block> MAGENTA_CHROMA_SLAB = REGISTRY.register("magenta_chroma_slab", () -> new MagentaChromaSlabBlock());
	public static final RegistryObject<Block> ORANGE_CHROMA_SLAB = REGISTRY.register("orange_chroma_slab", () -> new OrangeChromaSlabBlock());
	public static final RegistryObject<Block> PINK_CHROMA_SLAB = REGISTRY.register("pink_chroma_slab", () -> new PinkChromaSlabBlock());
	public static final RegistryObject<Block> PURPLE_CHROMA_SLAB = REGISTRY.register("purple_chroma_slab", () -> new PurpleChromaSlabBlock());
	public static final RegistryObject<Block> RED_CHROMA_SLAB = REGISTRY.register("red_chroma_slab", () -> new RedChromaSlabBlock());
	public static final RegistryObject<Block> YELLOW_CHROMA_SLAB = REGISTRY.register("yellow_chroma_slab", () -> new YellowChromaSlabBlock());
	public static final RegistryObject<Block> CUT_CHROMA_SLAB = REGISTRY.register("cut_chroma_slab", () -> new CutChromaSlabBlock());
	public static final RegistryObject<Block> BLUE_CUT_CHROMA_SLAB = REGISTRY.register("blue_cut_chroma_slab", () -> new BlueCutChromaSlabBlock());
	public static final RegistryObject<Block> BROWN_CUT_CHROMA_SLAB = REGISTRY.register("brown_cut_chroma_slab", () -> new BrownCutChromaSlabBlock());
	public static final RegistryObject<Block> CYAN_CUT_CHROMA_SLAB = REGISTRY.register("cyan_cut_chroma_slab", () -> new CyanCutChromaSlabBlock());
	public static final RegistryObject<Block> GRAY_CUT_CHROMA_SLAB = REGISTRY.register("gray_cut_chroma_slab", () -> new GrayCutChromaSlabBlock());
	public static final RegistryObject<Block> GREEN_CUT_CHROMA_SLAB = REGISTRY.register("green_cut_chroma_slab", () -> new GreenCutChromaSlabBlock());
	public static final RegistryObject<Block> MAGENTA_CUT_CHROMA_SLAB = REGISTRY.register("magenta_cut_chroma_slab", () -> new MagentaCutChromaSlabBlock());
	public static final RegistryObject<Block> ORANGE_CUT_CHROMA_SLAB = REGISTRY.register("orange_cut_chroma_slab", () -> new OrangeCutChromaSlabBlock());
	public static final RegistryObject<Block> PINK_CUT_CHROMA_SLAB = REGISTRY.register("pink_cut_chroma_slab", () -> new PinkCutChromaSlabBlock());
	public static final RegistryObject<Block> PURPLE_CUT_CHROMA_SLAB = REGISTRY.register("purple_cut_chroma_slab", () -> new PurpleCutChromaSlabBlock());
	public static final RegistryObject<Block> RED_CUT_CHROMA_SLAB = REGISTRY.register("red_cut_chroma_slab", () -> new RedCutChromaSlabBlock());
	public static final RegistryObject<Block> YELLOW_CUT_CHROMA_SLAB = REGISTRY.register("yellow_cut_chroma_slab", () -> new YellowCutChromaSlabBlock());
	public static final RegistryObject<Block> BLUE_CUT_INVERTED_SLAB = REGISTRY.register("blue_cut_inverted_slab", () -> new BlueCutInvertedSlabBlock());
	public static final RegistryObject<Block> BROWN_CUT_INVERTED_SLAB = REGISTRY.register("brown_cut_inverted_slab", () -> new BrownCutInvertedSlabBlock());
	public static final RegistryObject<Block> INVERTED_SLAB = REGISTRY.register("inverted_slab", () -> new InvertedSlabBlock());
	public static final RegistryObject<Block> BLUE_INVERTED_SLAB = REGISTRY.register("blue_inverted_slab", () -> new BlueInvertedSlabBlock());
	public static final RegistryObject<Block> BROWN_INVERTED_SLAB = REGISTRY.register("brown_inverted_slab", () -> new BrownInvertedSlabBlock());
	public static final RegistryObject<Block> CYAN_INVERTED_SLAB = REGISTRY.register("cyan_inverted_slab", () -> new CyanInvertedSlabBlock());
	public static final RegistryObject<Block> GRAY_INVERTED_SLAB = REGISTRY.register("gray_inverted_slab", () -> new GrayInvertedSlabBlock());
	public static final RegistryObject<Block> GREEN_INVERTED_SLAB = REGISTRY.register("green_inverted_slab", () -> new GreenInvertedSlabBlock());
	public static final RegistryObject<Block> MAGENTA_INVERTED_SLAB = REGISTRY.register("magenta_inverted_slab", () -> new MagentaInvertedSlabBlock());
	public static final RegistryObject<Block> ORANGE_INVERTED_SLAB = REGISTRY.register("orange_inverted_slab", () -> new OrangeInvertedSlabBlock());
	public static final RegistryObject<Block> PINK_INVERTED_SLAB = REGISTRY.register("pink_inverted_slab", () -> new PinkInvertedSlabBlock());
	public static final RegistryObject<Block> PURPLE_INVERTED_SLAB = REGISTRY.register("purple_inverted_slab", () -> new PurpleInvertedSlabBlock());
	public static final RegistryObject<Block> RED_INVERTED_SLAB = REGISTRY.register("red_inverted_slab", () -> new RedInvertedSlabBlock());
	public static final RegistryObject<Block> YELLOW_INVERTED_SLAB = REGISTRY.register("yellow_inverted_slab", () -> new YellowInvertedSlabBlock());
	public static final RegistryObject<Block> CYAN_CUT_INVERTED_SLAB = REGISTRY.register("cyan_cut_inverted_slab", () -> new CyanCutInvertedSlabBlock());
	public static final RegistryObject<Block> CUT_INVERTED_SLAB = REGISTRY.register("cut_inverted_slab", () -> new CutInvertedSlabBlock());
	public static final RegistryObject<Block> GRAY_CUT_INVERTED_SLAB = REGISTRY.register("gray_cut_inverted_slab", () -> new GrayCutInvertedSlabBlock());
	public static final RegistryObject<Block> GREEN_CUT_INVERTED_SLAB = REGISTRY.register("green_cut_inverted_slab", () -> new GreenCutInvertedSlabBlock());
	public static final RegistryObject<Block> MAGENTA_CUT_INVERTED_SLAB = REGISTRY.register("magenta_cut_inverted_slab", () -> new MagentaCutInvertedSlabBlock());
	public static final RegistryObject<Block> ORANGE_CUT_INVERTED_SLAB = REGISTRY.register("orange_cut_inverted_slab", () -> new OrangeCutInvertedSlabBlock());
	public static final RegistryObject<Block> PINK_CUT_INVERTED_SLAB = REGISTRY.register("pink_cut_inverted_slab", () -> new PinkCutInvertedSlabBlock());
	public static final RegistryObject<Block> PURPLE_CUT_INVERTED_SLAB = REGISTRY.register("purple_cut_inverted_slab", () -> new PurpleCutInvertedSlabBlock());
	public static final RegistryObject<Block> RED_CUT_INVERTED_SLAB = REGISTRY.register("red_cut_inverted_slab", () -> new RedCutInvertedSlabBlock());
	public static final RegistryObject<Block> YELLOW_CUT_INVERTED_SLAB = REGISTRY.register("yellow_cut_inverted_slab", () -> new YellowCutInvertedSlabBlock());
	public static final RegistryObject<Block> INVERTED_BRICKS = REGISTRY.register("inverted_bricks", () -> new InvertedBrickBlock());
	public static final RegistryObject<Block> BLUE_INVERTED_BRICKS = REGISTRY.register("blue_inverted_bricks", () -> new BlueInvertedBrickBlock());
	public static final RegistryObject<Block> BROWN_INVERTED_BRICKS = REGISTRY.register("brown_inverted_bricks", () -> new BrownInvertedBrickBlock());
	public static final RegistryObject<Block> CYAN_INVERTED_BRICKS = REGISTRY.register("cyan_inverted_bricks", () -> new CyanInvertedBrickBlock());
	public static final RegistryObject<Block> GRAY_INVERTED_BRICKS = REGISTRY.register("gray_inverted_bricks", () -> new GrayInvertedBrickBlock());
	public static final RegistryObject<Block> GREEN_INVERTED_BRICKS = REGISTRY.register("green_inverted_bricks", () -> new GreenInvertedBrickBlock());
	public static final RegistryObject<Block> MAGENTA_INVERTED_BRICKS = REGISTRY.register("magenta_inverted_bricks", () -> new MagentaInvertedBrickBlock());
	public static final RegistryObject<Block> ORANGE_INVERTED_BRICKS = REGISTRY.register("orange_inverted_bricks", () -> new OrangeInvertedBrickBlock());
	public static final RegistryObject<Block> PINK_INVERTED_BRICKS = REGISTRY.register("pink_inverted_bricks", () -> new PinkInvertedBrickBlock());
	public static final RegistryObject<Block> PURPLE_INVERTED_BRICKS = REGISTRY.register("purple_inverted_bricks", () -> new PurpleInvertedBrickBlock());
	public static final RegistryObject<Block> RED_INVERTED_BRICKS = REGISTRY.register("red_inverted_bricks", () -> new RedInvertedBrickBlock());
	public static final RegistryObject<Block> YELLOW_INVERTED_BRICKS = REGISTRY.register("yellow_inverted_bricks", () -> new YellowInvertedBrickBlock());
	public static final RegistryObject<Block> CHROMA_BRICK_SLAB = REGISTRY.register("chroma_brick_slab", () -> new ChromaBrickSlabBlock());
	public static final RegistryObject<Block> BLUE_CHROMA_BRICK_SLAB = REGISTRY.register("blue_chroma_brick_slab", () -> new BlueChromaBrickSlabBlock());
	public static final RegistryObject<Block> BROWN_CHROMA_BRICK_SLAB = REGISTRY.register("brown_chroma_brick_slab", () -> new BrownChromaBrickSlabBlock());
	public static final RegistryObject<Block> CYAN_CHROMA_BRICK_SLAB = REGISTRY.register("cyan_chroma_brick_slab", () -> new CyanChromaBrickSlabBlock());
	public static final RegistryObject<Block> GRAY_CHROMA_BRICK_SLAB = REGISTRY.register("gray_chroma_brick_slab", () -> new GrayChromaBrickSlabBlock());
	public static final RegistryObject<Block> GREEN_CHROMA_BRICK_SLAB = REGISTRY.register("green_chroma_brick_slab", () -> new GreenChromaBrickSlabBlock());
	public static final RegistryObject<Block> MAGENTA_CHROMA_BRICK_SLAB = REGISTRY.register("magenta_chroma_brick_slab", () -> new MagentaChromaBrickSlabBlock());
	public static final RegistryObject<Block> ORANGE_CHROMA_BRICK_SLAB = REGISTRY.register("orange_chroma_brick_slab", () -> new OrangeChromaBrickSlabBlock());
	public static final RegistryObject<Block> PINK_CHROMA_BRICK_SLAB = REGISTRY.register("pink_chroma_brick_slab", () -> new PinkChromaBrickSlabBlock());
	public static final RegistryObject<Block> PURPLE_CHROMA_BRICK_SLAB = REGISTRY.register("purple_chroma_brick_slab", () -> new PurpleChromaBrickSlabBlock());
	public static final RegistryObject<Block> RED_CHROMA_BRICK_SLAB = REGISTRY.register("red_chroma_brick_slab", () -> new RedChromaBrickSlabBlock());
	public static final RegistryObject<Block> YELLOW_CHROMA_BRICK_SLAB = REGISTRY.register("yellow_chroma_brick_slab", () -> new YellowChromaBrickSlabBlock());
	public static final RegistryObject<Block> INVERTED_BRICK_SLAB = REGISTRY.register("inverted_brick_slab", () -> new InvertedBrickSlabBlock());
	public static final RegistryObject<Block> BLUE_INVERTED_BRICK_SLAB = REGISTRY.register("blue_inverted_brick_slab", () -> new BlueInvertedBrickSlabBlock());
	public static final RegistryObject<Block> BROWN_INVERTED_BRICK_SLAB = REGISTRY.register("brown_inverted_brick_slab", () -> new BrownInvertedBrickSlabBlock());
	public static final RegistryObject<Block> CYAN_INVERTED_BRICK_SLAB = REGISTRY.register("cyan_inverted_brick_slab", () -> new CyanInvertedBrickSlabBlock());
	public static final RegistryObject<Block> GRAY_INVERTED_BRICK_SLAB = REGISTRY.register("gray_inverted_brick_slab", () -> new GrayInvertedBrickSlabBlock());
	public static final RegistryObject<Block> GREEN_INVERTED_BRICK_SLAB = REGISTRY.register("green_inverted_brick_slab", () -> new GreenInvertedBrickSlabBlock());
	public static final RegistryObject<Block> MAGENTA_INVERTED_BRICK_SLAB = REGISTRY.register("magenta_inverted_brick_slab", () -> new MagentaInvertedBrickSlabBlock());
	public static final RegistryObject<Block> ORANGE_INVERTED_BRICK_SLAB = REGISTRY.register("orange_inverted_brick_slab", () -> new OrangeInvertedBrickSlabBlock());
	public static final RegistryObject<Block> PINK_INVERTED_BRICK_SLAB = REGISTRY.register("pink_inverted_brick_slab", () -> new PinkInvertedBrickSlabBlock());
	public static final RegistryObject<Block> PURPLE_INVERTED_BRICK_SLAB = REGISTRY.register("purple_inverted_brick_slab", () -> new PurpleInvertedBrickSlabBlock());
	public static final RegistryObject<Block> RED_INVERTED_BRICK_SLAB = REGISTRY.register("red_inverted_brick_slab", () -> new RedInvertedBrickSlabBlock());
	public static final RegistryObject<Block> YELLOW_INVERTED_BRICK_SLAB = REGISTRY.register("yellow_inverted_brick_slab", () -> new YellowInvertedBrickSlabBlock());
	public static final RegistryObject<Block> SMALL_CHROMA_BRICKS = REGISTRY.register("small_chroma_bricks", () -> new SmallChromaBrickBlock());
	public static final RegistryObject<Block> BLUE_SMALL_CHROMA_BRICKS = REGISTRY.register("blue_small_chroma_bricks", () -> new BlueSmallChromaBricksBlock());
}
